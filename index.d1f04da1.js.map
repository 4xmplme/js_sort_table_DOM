{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAgB,EAAG,SAAS,gBAAgB,CAAC,mBAC7C,EAAY,SAAS,aAAa,CAAC,eACnC,EAAa,EAAG,EAAU,QAAQ,EAExC,SAAS,gBAAgB,CAAC,QAAS,SAAC,CAApC,EACE,IAAQ,EAAW,EAAX,MAAR,CAEA,GAAI,EAAa,QAAQ,CAAC,GAAS,CACjC,IAAM,EAAc,EAAa,OAAO,CAAC,GAEzC,EAAU,IAAI,CAAC,SAAC,CAAA,CAAM,CAAtB,EACE,IAAqB,EAAU,AAAA,EAAK,QAAQ,CAAC,EAAY,CAAjD,WAAR,CACqB,EAAU,AAAA,EAAK,QAAQ,CAAC,EAAY,CAAjD,WAAR,CAEA,OAAQ,EAAO,WAAW,EACxB,IAAK,OACL,IAAK,WACL,QACE,OAAO,EAAM,aAAa,CAAC,EAE7B,KAAK,MACL,IAAK,SACH,MAAO,CAAC,EAAM,OAAO,CAAC,MAAO,IAAM,CAAC,EAAM,OAAO,CAAC,MAAO,GAC7D,CACF,EACF,CAEA,AAAA,EAAU,MAAM,CAAhB,KAAA,CAAA,EAAiB,EAAG,GACtB","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar tableColumns = _to_consumable_array(document.querySelectorAll(\"table thead th\"));\nvar tableBody = document.querySelector(\"table tbody\");\nvar tableRows = _to_consumable_array(tableBody.children);\ndocument.addEventListener(\"click\", function(e) {\n    var _tableBody;\n    var target = e.target;\n    if (tableColumns.includes(target)) {\n        var columnIndex = tableColumns.indexOf(target);\n        tableRows.sort(function(rowA, rowB) {\n            var _rowA_children_columnIndex = rowA.children[columnIndex], cellA = _rowA_children_columnIndex.textContent;\n            var _rowB_children_columnIndex = rowB.children[columnIndex], cellB = _rowB_children_columnIndex.textContent;\n            switch(target.textContent){\n                case \"Name\":\n                case \"Position\":\n                default:\n                    return cellA.localeCompare(cellB);\n                case \"Age\":\n                case \"Salary\":\n                    return +cellA.replace(/\\D/g, \"\") - +cellB.replace(/\\D/g, \"\");\n            }\n        });\n    }\n    (_tableBody = tableBody).append.apply(_tableBody, _to_consumable_array(tableRows));\n});\n\n//# sourceMappingURL=index.d1f04da1.js.map\n","'use strict';\n\nconst tableColumns = [...document.querySelectorAll('table thead th')];\nconst tableBody = document.querySelector('table tbody');\nconst tableRows = [...tableBody.children];\n\ndocument.addEventListener('click', (e) => {\n  const { target } = e;\n\n  if (tableColumns.includes(target)) {\n    const columnIndex = tableColumns.indexOf(target);\n\n    tableRows.sort((rowA, rowB) => {\n      const { textContent: cellA } = rowA.children[columnIndex];\n      const { textContent: cellB } = rowB.children[columnIndex];\n\n      switch (target.textContent) {\n        case 'Name':\n        case 'Position':\n        default:\n          return cellA.localeCompare(cellB);\n\n        case 'Age':\n        case 'Salary':\n          return +cellA.replace(/\\D/g, '') - +cellB.replace(/\\D/g, '');\n      }\n    });\n  }\n\n  tableBody.append(...tableRows);\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","tableColumns","document","querySelectorAll","tableBody","querySelector","tableRows","children","addEventListener","e","target","includes","columnIndex","indexOf","sort","rowA","rowB","cellA","_rowA_children_columnIndex","textContent","cellB","_rowB_children_columnIndex","localeCompare","replace","append","apply"],"version":3,"file":"index.d1f04da1.js.map"}